Lambda Code - Python

def lambda_handler(event, context):
    name = event.get('name')
    return f"Hello {name}!"

------------------------------------------------------------
Step Function Code 

{
  "Comment": "A simple Step Function example",
  "StartAt": "InvokeLambda",
  "States": {
    "InvokeLambda": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:890723668909:function:LambdaStep:$LATEST",
      "ResultPath": "$.lambdaResult",
      "Next": "CheckResult"
    },
    "CheckResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.lambdaResult",
          "StringMatches": "*Love*",
          "Next": "IsStudent"
        }
      ],
      "Default": "NotStudent"
    },
    "IsStudent": {
      "Type": "Pass",
      "Result": "Love is Present in the Class",
      "End": true
    },
    "NotStudent": {
      "Type": "Pass",
      "Result": "Love is not present in the Class",
      "End": true
    }
  }
}

-------------------------------
Second Version of the Step Function Code 

{
  "Comment": "A simple Step Function example",
  "StartAt": "InvokeLambda",
  "States": {
    "InvokeLambda": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:<region>:<account-id>:function:HelloNameFunction",
      "ResultPath": "$.lambdaResult",
      "Next": "CheckResult"
    },
    "CheckResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.lambdaResult",
          "StringEquals": "Love",
          "Next": "IsStudent"
        }
      ],
      "Default": "NotStudent"
    },
    "IsStudent": {
      "Type": "Pass",
      "Result": "Student",
      "End": true
    },
    "NotStudent": {
      "Type": "Pass",
      "Result": "Not Student",
      "End": true
    }
  }
}
